[build-system]
requires = ["setuptools>66", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "deltaseis"
dynamic = ["version"]
maintainers = [{name = "Roeland Nieboer", email = "roeland.nieboer@deltares.nl"}]
description = "Doing cool stuff with seismic data"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "deltaseis",
    "seisnc",
    "seg-y",
    "seismic",
    "das",
    "tdms",
    "pre-stack",
    "post-stack",
    "geophysics",
    "synthetic specfem",
    "netcdf",
    "subsurface toolbox",
    "deltares"
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Visualization",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
   	"Programming Language :: Python :: 3.13",
]
requires-python = ">=3.13"
dependencies = [
    "segyio",
    "segpy",
    "segysak", 
    #"geost>=0.3.0,<0.4",
]

[project.optional-dependencies]
dev = [
    "black",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/Deltares-research/DeltaSEIS"
Repository = "https://github.com/Deltares-research/DeltaSEIS.git"
Issues = "https://github.com/Deltares-research/DeltaSEIS/issues"

[tool.setuptools.packages.find]
include = ["deltaseis", "deltaseis.*"]

[tool.setuptools.dynamic]
version = {attr = "deltaseis.__version__"}

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [ 
	"unittest: test of single component",
	"integrationtest: test of multiple components",
]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
target-version = "py313"
select = ["F", "E", "W", "N", "I001"]
ignore = ["F401"]
unfixable = ["F401"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
gdal = "*"
pip = "*"
scipy = "*"
numpy = "*"
pyproj = "*"
shapely = "*"
xarray = "*"
matplotlib = "*"
ipykernel = "*"
jupyter = "*"
geopandas = "*"
obspy = "*"
pywavelets = ">=1.9.0,<2"
pyogrio = ">=0.11.1,<0.12"
libgdal = "*"

[tool.pixi.pypi-dependencies]
deltaseis = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

# Set GDAL_DATA environment variable to fix GDAL warnings
[tool.pixi.activation]
env = { GDAL_DATA = "$PIXI_PROJECT_ROOT/.pixi/envs/default/Library/share/gdal" }

[tool.pixi.tasks]
notebook = "jupyter notebook ./tutorials/segy_editing.ipynb"

